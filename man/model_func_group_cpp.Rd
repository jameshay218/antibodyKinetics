% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{model_func_group_cpp}
\alias{model_func_group_cpp}
\title{Model calculation cpp implementation}
\usage{
model_func_group_cpp(pars, times, groups, strains, exposure_indices,
  exposure_i_lengths, strain_indices, strain_i_lengths, exposure_times,
  exposure_strains, exposure_next, exposure_measured, exposure_orders,
  exposure_primes, cr_inds, par_inds, order_inds, par_lengths, cr_lengths,
  version)
}
\arguments{
\item{pars}{the vector of model parameters as in parTab}

\item{times}{the vector of times to solve the model over}

\item{groups}{IntegerVector of the exposure groups (starting at group 1)}

\item{strains}{IntegerVector of strains involved in exposures (ie. observed and exposed), starting at 1}

\item{exposure_indices}{IntegerVector of indices from the exposure table}

\item{exposure_i_lengths}{IntegerVector of lengths describing the size of blocks in the exposure_indices vector that relate to each exposure group}

\item{strain_indices}{IntegerVector of indices relating to the exposure table, with contiguous indices for each group and then each strain}

\item{strain_i_lengths}{IntegerVector of lengths describing the size of blocks in the strain_indices vector that relate to each strain and group}

\item{exposure_times}{NumericVector infection time of each exposure}

\item{exposure_strains}{IntegerVector of exposure strains for each exposure}

\item{exposure_next}{NumericVector specifying the time of the exposure after the current one (for subsetting times)}

\item{exposure_measured}{IntegerVector of measured strain for each exposure}

\item{exposure_orders}{IntegerVector of order of exposures}

\item{exposure_primes}{IntegerVector of whether each exposure was primed or not (for priming modifier)}

\item{cr_inds}{IntegerVector of indices describing which parTab rows relate to cross reactivity parameters}

\item{par_inds}{IntegerVector of indices describing which parTab rows relate to model parameters}

\item{order_inds}{IntegerVector of indices describing which parTab rows relate to order modifer parameters}

\item{par_lengths}{IntegerVector of lengths describing the size of blocks in the par_type_ind vector that relate to each exposure type}

\item{cr_lengths}{IntegerVector of lengths describing the size of blocks in the cr_ind vector that relate to each strain}

\item{version}{integer indicating which version of the model will be solve. 0 solves the isolated form, and 1 solves the competitive exposure form.}

\item{exposure_i_lengths}{IntegerVector of lengths describing the size of blocks in the exposure_indices vector that relate to each exposure group}
}
\value{
a matrix of antibody kinetic trajectories, with rows for group and then strain
}
\description{
Solves the antibody kinetics model for given parameters. This is a complex function, 
so should only really be called through \code{\link{create_model_group_func_cpp}}. 
Look at this code to really understand what's going on! The key confusing thing is 
that the length of the vectors has to match the number of rows from the overall 
parameter table
}
